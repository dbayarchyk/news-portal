version: 2.1
orbs:
  node: circleci/node@4.0.0
  docker: circleci/docker@1.2.1
  digitalocean: digitalocean/cli@0.1.1
  kubernetes: circleci/kubernetes@0.3.0
  helm: circleci/helm@1.1.2
  cypress: cypress-io/cypress@1.26.0
jobs:
  # --- START: Market service jobs: ---
  init-market-service:
    executor:
      name: node/default
    steps:
      - checkout
      - node/install-packages:
          app-dir: ./api/services/market
      - persist_to_workspace:
          root: ./api/services/market
          paths:
            - node_modules/*

  lint-market-service:
    executor:
      name: node/default
    steps:
      - checkout
      - attach_workspace:
          at: ./api/services/market
      - run: cd api/services/market && npm run lint

  test-market-service:
    executor:
      name: node/default
    steps:
      - checkout
      - attach_workspace:
          at: ./api/services/market
      - run: cd api/services/market && npm run test

  build-and-push-market-service-docker-image:
    machine: true
    steps:
      - checkout
      - run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
      - run: docker build -t dbayarchyk/itdog-market-service:$CIRCLE_SHA1 -f ~/project/api/services/market/Dockerfile ~/project/api/services/market
      - run: docker push dbayarchyk/itdog-market-service:$CIRCLE_SHA1
      - run: |
          if [ "$CIRCLE_BRANCH" = "master" ]; then
            docker tag dbayarchyk/itdog-market-service:$CIRCLE_SHA1 dbayarchyk/itdog-market-service:latest
            docker push dbayarchyk/itdog-market-service:latest
          fi
  # --- END: Market service jobs ---

  # --- START: Comment service jobs: ---
  init-comment-service:
    executor:
      name: node/default
    steps:
      - checkout
      - node/install-packages:
          app-dir: ./api/services/comment
      - persist_to_workspace:
          root: ./api/services/comment
          paths:
            - node_modules/*

  lint-comment-service:
    executor:
      name: node/default
    steps:
      - checkout
      - attach_workspace:
          at: ./api/services/comment
      - run: cd api/services/comment && npm run lint

  test-comment-service:
    executor:
      name: node/default
    steps:
      - checkout
      - attach_workspace:
          at: ./api/services/comment
      - run: cd api/services/comment && npm run test

  build-and-push-comment-service-docker-image:
    machine: true
    steps:
      - checkout
      - run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
      - run: docker build -t dbayarchyk/itdog-comment-service:$CIRCLE_SHA1 -f ~/project/api/services/comment/Dockerfile ~/project/api/services/comment
      - run: docker push dbayarchyk/itdog-comment-service:$CIRCLE_SHA1
      - run: |
          if [ "$CIRCLE_BRANCH" = "master" ]; then
            docker tag dbayarchyk/itdog-comment-service:$CIRCLE_SHA1 dbayarchyk/itdog-comment-service:latest
            docker push dbayarchyk/itdog-comment-service:latest
          fi
  # --- END: Comment service jobs ---

  # --- START: Auth service jobs: ---
  init-auth-service:
    executor:
      name: node/default
    steps:
      - checkout
      - node/install-packages:
          app-dir: ./api/services/auth
      - persist_to_workspace:
          root: ./api/services/auth
          paths:
            - node_modules/*

  lint-auth-service:
    executor:
      name: node/default
    steps:
      - checkout
      - attach_workspace:
          at: ./api/services/auth
      - run: cd api/services/auth && npm run lint

  test-auth-service:
    executor:
      name: node/default
    steps:
      - checkout
      - attach_workspace:
          at: ./api/services/auth
      - run: cd api/services/auth && npm run test

  build-and-push-auth-service-docker-image:
    machine: true
    steps:
      - checkout
      - run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
      - run: docker build -t dbayarchyk/itdog-auth-service:$CIRCLE_SHA1 -f ~/project/api/services/auth/Dockerfile ~/project/api/services/auth
      - run: docker push dbayarchyk/itdog-auth-service:$CIRCLE_SHA1
      - run: |
          if [ "$CIRCLE_BRANCH" = "master" ]; then
            docker tag dbayarchyk/itdog-auth-service:$CIRCLE_SHA1 dbayarchyk/itdog-auth-service:latest
            docker push dbayarchyk/itdog-auth-service:latest
          fi
  # --- END: Auth service jobs ---

  # --- START: Analytics service jobs: ---
  init-analytics-service:
    executor:
      name: node/default
    steps:
      - checkout
      - node/install-packages:
          app-dir: ./api/services/analytics
      - persist_to_workspace:
          root: ./api/services/analytics
          paths:
            - node_modules/*

  lint-analytics-service:
    executor:
      name: node/default
    steps:
      - checkout
      - attach_workspace:
          at: ./api/services/analytics
      - run: cd api/services/analytics && npm run lint

  test-analytics-service:
    executor:
      name: node/default
    steps:
      - checkout
      - attach_workspace:
          at: ./api/services/analytics
      - run: cd api/services/analytics && npm run test

  build-and-push-analytics-service-docker-image:
    machine: true
    steps:
      - checkout
      - run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
      - run: docker build -t dbayarchyk/itdog-analytics-service:$CIRCLE_SHA1 -f ~/project/api/services/analytics/Dockerfile ~/project/api/services/analytics
      - run: docker push dbayarchyk/itdog-analytics-service:$CIRCLE_SHA1
      - run: |
          if [ "$CIRCLE_BRANCH" = "master" ]; then
            docker tag dbayarchyk/itdog-analytics-service:$CIRCLE_SHA1 dbayarchyk/itdog-analytics-service:latest
            docker push dbayarchyk/itdog-analytics-service:latest
          fi
  # --- END: Analytics service jobs ---

  # --- START: Web jobs: ---
  init-web:
    executor:
      name: node/default
    steps:
      - checkout
      - node/install-packages:
          app-dir: ./web
      - persist_to_workspace:
          root: ./web
          paths:
            - node_modules/*

  lint-web:
    executor:
      name: node/default
    steps:
      - checkout
      - attach_workspace:
          at: ./web
      - run: cd web && npm run lint

  test-web:
    executor:
      name: node/default
    steps:
      - checkout
      - attach_workspace:
          at: ./web
      - run: cd web && npm run test

  build-and-push-web-docker-image:
    machine: true
    steps:
      - checkout
      - run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
      - run: docker build -t dbayarchyk/itdog-web:$CIRCLE_SHA1 -f ~/project/web/Dockerfile ~/project/web --build-arg CONTENTFUL_SPACE_ID_ARG=$CONTENTFUL_SPACE_ID --build-arg CONTENTFUL_ACCESS_TOKEN_ARG=$CONTENTFUL_ACCESS_TOKEN --build-arg NEXT_PUBLIC_GOOGLE_ANALYTICS_TRACKING_ID_ARG=$NEXT_PUBLIC_GOOGLE_ANALYTICS_TRACKING_ID
      - run: docker push dbayarchyk/itdog-web:$CIRCLE_SHA1
      - run: |
          if [ "$CIRCLE_BRANCH" = "master" ]; then
            docker tag dbayarchyk/itdog-web:$CIRCLE_SHA1 dbayarchyk/itdog-web:latest
            docker push dbayarchyk/itdog-web:latest
          fi
  # --- END: Web jobs ---

  deploy-to-preview:
    machine: true
    steps:
      - checkout
      - digitalocean/install
      - digitalocean/initialize:
          digitalocean-access-token: DIGITALOCEAN_ACCESS_TOKEN
      - run: doctl kubernetes cluster kubeconfig save news-portal
      - helm/install-helm-client:
          version: v3.4.2
      - run: |
          SANITIZED_BRANCH=${CIRCLE_BRANCH//[^a-zA-Z0-9-_]/-}
          DOMAIN_RECORD_NAME=${SANITIZED_BRANCH}.itdog

          if ! $(doctl compute domain records list dbayarchyk.xyz | grep -q ${DOMAIN_RECORD_NAME})
          then
            LOAD_BALANCER_IP=$(doctl compute load-balancer get ${LOAD_BALANCER_ID} --format IP --no-header)
            doctl compute domain records create dbayarchyk.xyz \
              --record-type A \
              --record-name ${DOMAIN_RECORD_NAME} \
              --record-data ${LOAD_BALANCER_IP} \
              --record-ttl 60
          fi

          PREVIEW_HOST=${DOMAIN_RECORD_NAME}.dbayarchyk.xyz

          # Apply CIRCLE_SHA1 to the docker images as a tag
          sed -i -e "s/{{ RELEASE_TAG }}/${CIRCLE_SHA1}/" infrastructure/helm/values/preview.yaml

          kubectl create namespace ${SANITIZED_BRANCH}

          # Setup all secrets
          kubectl create secret generic comment-generic-secret \
            --from-literal MONGODB_URL="${PREVIEW_COMMENT_SERVICE_MONGODB_URL}" \
            --namespace ${SANITIZED_BRANCH}

          kubectl create secret generic market-generic-secret \
            --from-literal MONGODB_URL="${PREVIEW_MARKET_SERVICE_MONGODB_URL}" \
            --namespace ${SANITIZED_BRANCH}

          kubectl create secret generic auth-generic-secret \
            --from-literal MONGODB_URL="${PREVIEW_AUTH_SERVICE_MONGODB_URL}" \
            --from-literal ACCESS_TOKEN_SECRET="${PREVIEW_AUTH_SERVICE_ACCESS_TOKEN_SECRET}" \
            --from-literal REFRESH_TOKEN_SECRET="${PREVIEW_AUTH_SERVICE_REFRESH_TOKEN_SECRET}" \
            --namespace ${SANITIZED_BRANCH}

          kubectl create secret generic analytics-generic-secret \
            --from-literal GOOGLE_SERVICE_ACCOUNT_CLIENT_EMAIL="${PREVIEW_ANALYLICS_SERVICE_GOOGLE_SERVICE_ACCOUNT_CLIENT_EMAIL}" \
            --from-literal GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY="${PREVIEW_ANALYLICS_SERVICE_GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY}" \
            --namespace ${SANITIZED_BRANCH}

          helm upgrade ${DOMAIN_RECORD_NAME} infrastructure/helm \
            --install \
            --recreate-pods \
            -f infrastructure/helm/values/preview.yaml \
            --set host=${PREVIEW_HOST} \
            --namespace ${SANITIZED_BRANCH} \
            --create-namespace

          echo "Created a preview environment: ${PREVIEW_HOST}"

  deploy-to-prod:
    machine: true
    steps:
      - checkout
      - digitalocean/install
      - digitalocean/initialize:
          digitalocean-access-token: DIGITALOCEAN_ACCESS_TOKEN
      - run: doctl kubernetes cluster kubeconfig save news-portal
      - helm/install-helm-client:
          version: v3.4.2
      - run: helm upgrade --install --recreate-pods -f infrastructure/helm/values/prod.yaml itdog infrastructure/helm
workflows:
  build-and-publish-docker-images:
    jobs:
      - init-market-service
      - init-comment-service
      - init-auth-service
      - init-analytics-service
      - init-web

      - lint-market-service:
          requires:
            - init-market-service
      - lint-comment-service:
          requires:
            - init-comment-service
      - lint-auth-service:
          requires:
            - init-auth-service
      - lint-analytics-service:
          requires:
            - init-analytics-service
      - lint-web:
          requires:
            - init-web

      - test-market-service:
          requires:
            - init-market-service
      - test-comment-service:
          requires:
            - init-comment-service
      - test-auth-service:
          requires:
            - init-auth-service
      - test-analytics-service:
          requires:
            - init-analytics-service
      - test-web:
          requires:
            - init-web

      - build-and-push-market-service-docker-image:
          requires:
            - lint-market-service
            - test-market-service
      - build-and-push-comment-service-docker-image:
          requires:
            - lint-comment-service
            - test-comment-service
      - build-and-push-auth-service-docker-image:
          requires:
            - lint-auth-service
            - test-auth-service
      - build-and-push-analytics-service-docker-image:
          requires:
            - lint-analytics-service
            - test-analytics-service
      - build-and-push-web-docker-image:
          requires:
            - lint-web
            - test-web

      - deploy-to-preview:
          requires:
            - build-and-push-market-service-docker-image
            - build-and-push-comment-service-docker-image
            - build-and-push-auth-service-docker-image
            - build-and-push-analytics-service-docker-image
            - build-and-push-web-docker-image
          filters:
            branches:
              ignore:
                - master

      - cypress/run:
          pre-steps:
            - run: export CYPRESS_BASE_URL=http://${CIRCLE_BRANCH//[^a-zA-Z0-9-_]/-}.itdog.dbayarchyk.xyz
          requires:
            - deploy-to-preview

      - deploy-to-prod:
          requires:
            - build-and-push-market-service-docker-image
            - build-and-push-comment-service-docker-image
            - build-and-push-auth-service-docker-image
            - build-and-push-analytics-service-docker-image
            - build-and-push-web-docker-image
          filters:
            branches:
              only:
                - master